<project name="GPD-wiki" default="build-html" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <description>Process GPD wiki from sources to HTML</description>
    
    <!-- Expose environment variables with an ".env" prefix. -->
    <property environment="env"/>

    <property file="build.properties"/>

    <include file="${pfwiki.dir}/pfwiki.xml"/>
    
    <property name="resourcedir" location="resources"/>
    <property name="merged-srcdir" location="merged-src"/>
    <property name="target-html-dir" location="target-html"/>

    <!-- Use absolute locations for Pandoc paths -->
    <property name="pandoc" location="${pandoc.exe}"/>

    <target name="init">
      <mkdir dir="${merged-srcdir}"/>
      <mkdir dir="${target-html-dir}"/>
    </target>
    
    <target name="copy-src" depends="init" description="Copy resources and external sources to our merged-srcdir">
      <!-- Copy external sources -->
      <copy todir="${merged-srcdir}" verbose="true">
        <fileset dir="${external-src.dir}" includes="*.md"/>
      </copy>
      <copy todir="${target-html-dir}" verbose="true">
        <fileset dir="${external-src.dir}">
          <patternset refid="pfwiki.html.resources"/>
        </fileset>
      </copy>
      
      <!-- Copy resource includes -->
      <copy todir="${merged-srcdir}">
        <fileset dir="${resourcedir}" includes="**/*.md, **/*.ftl, ${pandoc.template}"/>
      </copy>
    </target>

    <target name="build-partials" depends="copy-src" description="Convert sidebar and footer into HTML">
      <uptodate property="partials.uptodate">
        <srcfiles dir="${merged-srcdir}" includes="_Sidebar.md, _Footer.md" />
        <mapper type="glob" from="*.md" to="*.html"/>
      </uptodate>
      <echo message="Partials changed -- rebuilding HTML" unless:set="partials.uptodate"/>
      <apply executable="${pandoc}" dest="${merged-srcdir}" verbose="true" parallel="false" unless:set="partials.uptodate">
        <fileset dir="${merged-srcdir}" includes="_Sidebar.md, _Footer.md" />
        <mapper type="glob" from="*.md" to="*.html"/>
        <arg line="-f gfm -t html"/>
        <arg value="-o"/>
	<targetfile/>
	<srcfile/>
      </apply>
    </target>
    
    <target name="build-html" depends="build-partials" description="Run Pandoc to build HTML">
      <delete unless:set="partials.uptodate">
        <fileset dir="${target-html-dir}" includes="*.html"/>
      </delete>
      <copy todir="${target-html-dir}">
        <fileset dir="${resourcedir}">
          <patternset refid="pfwiki.html.resources"/>
        </fileset>
      </copy>
      <outofdate verbose="false" outputsources="md.sources" separator=",">
        <sourcefiles>
          <fileset dir="${merged-srcdir}" includes="*.md" excludes="_*.md"/>
        </sourcefiles>
        <mapper type="glob" dir="${merged-srcdir}" from="*.md" to="${target-html-dir}/*.html"/>
        <sequential>
          <!-- <echo message="${md.sources}"/> -->
          <for list="${md.sources}" param="sourcefile" delimiter="," trim="true">
            <sequential>
              <var name="basename" unset="true"/>
              <basename file="@{sourcefile}" property="basename" suffix=".md"/>
              <propertyregex property="doctitle" override="true" input="${basename}"
                             regexp="-" replace=" " global="true" defaultValue="${basename}"/>
              <var name="outputfile" value="${target-html-dir}/${basename}.html"/>
              <echo>Pandoc ${basename}.md -> ${basename}.html</echo>
              <exec executable="${pandoc}">
                <arg line="-f gfm -t html -s"/>
                <arg value="--template=${merged-srcdir}/${pandoc.template}"/>
                <arg value="--variable=cssfile:${css.file}"/>
                <arg value="--metadata=title:${doctitle}"/>
                <arg value="-o"/>
                <arg value="${outputfile}"/>
                <arg value="@{sourcefile}"/>
              </exec>
            </sequential>
          </for>
        </sequential>
      </outofdate>
      
      <fix-links replaceExt="html" replaceBare="true" stripComments="false" encoding="UTF-8" verbose="true">
        <fileset dir="${target-html-dir}">
          <include name="**/*.html"/>
          <modified algorithm="lastmodified" update="true" seldirs="false" cache="propertyfile" comparator="equal">
            <param name="cache.cachefile" value="${target-html-dir}/fix-links-cache.properties"/>
          </modified>
        </fileset>
      </fix-links>
    </target>
    
    <target name="clean" description="Clean output directories">
      <delete dir="${merged-srcdir}"/>
      <delete dir="${target-html-dir}"/>
    </target>
  
</project>

<!-- :indentSize=2:noTabs=true: -->
